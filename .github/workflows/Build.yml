name: Build
on:
  - push
  - release
  - pull_request
  - workflow_dispatch

jobs:
  build-windows:
    strategy:
      matrix:
        include:
          - arch: amd64
            runs-on: windows-latest
            platform: x64
          - arch: arm64
            runs-on: windows-11-arm
            platform: arm64
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install meson and ninja
        run: pip install meson ninja

      - name: Setup LLVM
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: '20'

      - name: Install pkg-config and create fake VapourSynth file
        shell: bash
        run: |
          choco install pkgconfiglite -y
          mkdir -p ./pkgconfig
          VS_HEADER_PATH=$(pwd -W)/vapoursynth/include
          cat > ./pkgconfig/vapoursynth.pc << EOF
          prefix=/usr/local
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib
          includedir=${VS_HEADER_PATH}

          Name: VapourSynth
          Description: A video processing framework
          Version: 72.0
          Libs: -L${libdir}
          Cflags: -I${includedir}
          EOF
          echo "PKG_CONFIG_PATH=$(pwd -W)/pkgconfig" >> $GITHUB_ENV

      - name: Download VS headers
        shell: bash
        run: |
          git clone https://github.com/vapoursynth/vapoursynth --depth=1

      - name: Setup MS dev commands
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}

      - name: Meson setup
        shell: pwsh
        run: |
          meson setup build/ --wrap-mode=forcefallback -Dstatic-llvm=true

      - name: Meson compile
        shell: pwsh
        run: |
          meson compile -C build/ -v

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-windows-${{ matrix.arch }}
          path: |
            build/*.dll

  build-linux:
    strategy:
      matrix:
        include:
          - arch: x86_64
            libc: glibc
            runs-on: ubuntu-latest
            container: ubuntu:22.04
          - arch: aarch64
            libc: glibc
            runs-on: ubuntu-22.04-arm
            container: ubuntu:22.04
          - arch: x86_64
            libc: musl
            runs-on: ubuntu-latest
            container: alpine:edge
          - arch: aarch64
            libc: musl
            runs-on: ubuntu-22.04-arm
            container: alpine:edge
    runs-on: ${{ matrix.runs-on }}
    container: ${{ matrix.container }}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (glibc)
        if: matrix.libc == 'glibc'
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt-get update
          apt-get install -y python3 python3-pip git build-essential pkg-config sudo curl
          pip install meson ninja

      - name: Setup LLVM (glibc)
        if: matrix.libc == 'glibc'
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: '20'

      - name: Install dependencies (musl)
        if: matrix.libc == 'musl'
        run: |
          apk add build-base python3 py3-pip git meson ninja
          apk add llvm20-static llvm20-dev
          ln -s /usr/bin/llvm-config-20 /usr/bin/llvm-config

      - name: Download VS headers
        run: git clone https://github.com/vapoursynth/vapoursynth --depth=1

      - name: Create fake VapourSynth pkg-config file
        run: |
          mkdir -p /root/pkgconfig
          VS_HEADER_PATH=$(pwd)/vapoursynth/include
          cat > /root/pkgconfig/vapoursynth.pc << EOF
          prefix=/usr/local
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib
          includedir=${VS_HEADER_PATH}

          Name: VapourSynth
          Description: A video processing framework
          Version: 72.0
          Libs: -L${libdir}
          Cflags: -I${includedir}
          EOF
          echo "PKG_CONFIG_PATH=/root/pkgconfig" >> $GITHUB_ENV

      - name: Meson setup
        run: meson setup build/ --wrap-mode=forcefallback -Dstatic-llvm=true

      - name: Meson compile
        run: meson compile -C build/ -v

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-linux-${{ matrix.arch }}-${{ matrix.libc }}
          path: |
            build/*.so

  build-macos:
    strategy:
      matrix:
        include:
          - arch: x86_64
            runs-on: macos-13
          - arch: arm64
            runs-on: macos-latest
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install meson and ninja
        run: |
          pip install meson ninja

      - name: Setup LLVM
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: '20'

      - name: Download VS headers
        run: |
          git clone https://github.com/vapoursynth/vapoursynth --depth=1

      - name: Create fake VapourSynth pkg-config file
        run: |
          mkdir -p $HOME/pkgconfig
          VS_HEADER_PATH=$(pwd)/vapoursynth/include
          cat > $HOME/pkgconfig/vapoursynth.pc << EOF
          prefix=/usr/local
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib
          includedir=${VS_HEADER_PATH}

          Name: VapourSynth
          Description: A video processing framework
          Version: 72.0
          Libs: -L${libdir}
          Cflags: -I${includedir}
          EOF
          echo "PKG_CONFIG_PATH=$HOME/pkgconfig" >> $GITHUB_ENV

      - name: Meson setup
        run: meson setup build/ --wrap-mode=forcefallback -Dstatic-llvm=true

      - name: Meson compile
        run: |
          meson compile -C build/ -v

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-macos-${{ matrix.arch }}
          path: |
            build/*.dylib
